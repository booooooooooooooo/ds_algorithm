/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

 /**
Recursive
 */
public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
      List<Integer> result = new ArrayList<Integer>();
      solve(result, root);
      return result;
    }
    public void solve(List<Integer> result, TreeNode node){
      if(node == null) return;
      else{
        result.add(node.val);
        solve(result, node.left);
        solve(result, node.right);
      }
    }
}


 /**
Iterative
 */
public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
      List<Integer> result = new ArrayList<Integer>();
      Stack<TreeNode> stack = new Stack<TreeNode>();
      stack.push(root);
      while( !stack.isEmpty() ){
        TreeNode node = stack.pop();
        if(node == null) continue;
        else{
          result.add(node.val);
          stack.push(node.right);
          stack.push(node.left);
        }
      }
      return result;
    }
}
